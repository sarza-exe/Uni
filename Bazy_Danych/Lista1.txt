1. 
SHOW TABLES;
23

2. 
SELECT title FROM film WHERE length > 120;
457

3. 
SELECT title FROM film WHERE rating = 'PG-13' ORDER BY length ASC LIMIT 4;
4

4. 
SELECT film.title, language.name FROM film JOIN language USING (language_id) WHERE film.description LIKE '%Drama%';
106

5. 
SELECT film.title FROM film_category JOIN film USING (film_id) JOIN category USING (category_id) WHERE category.name = 'Family' AND film.description LIKE '%Documentary%';
6

6.  
SELECT film.title FROM film_category JOIN film USING (film_id) JOIN category USING (category_id) WHERE category.name = 'Children' AND film.rating <> 'PG-13';
46

7.
SELECT rating, COUNT(film_id) number_of_films FROM film GROUP BY rating;
5

8.
SELECT DISTINCT film.title FROM inventory JOIN film USING (film_id) JOIN rental USING (inventory_id) WHERE rental_date BETWEEN '2005-05-31' AND '2005-06-30' ORDER BY film.title DESC;
900

9. 
SELECT DISTINCT first_name, last_name FROM film_actor JOIN film USING (film_id) JOIN actor USING (actor_id) WHERE special_features like '%Deleted Scenes%' GROUP BY actor_id;
199

10.
SELECT DISTINCT first_name, last_name FROM customer JOIN payment USING (customer_id) JOIN rental USING (customer_id) WHERE rental.rental_id = payment.rental_id AND rental.staff_id <> payment.staff_id;
599

11.
SELECT first_name, last_name FROM customer JOIN rental USING (customer_id) GROUP BY first_name, last_name HAVING COUNT(rental_id) > (SELECT COUNT(rental_id) FROM customer JOIN rental USING (customer_id) WHERE email = 'MARY.SMITH@sakilacustomer.org');
77

12.
SELECT a1.first_name, a1.last_name, a2.first_name, a2.last_name 
FROM actor a1, actor a2 
JOIN film_actor X, film_actor Y 
WHERE a1.actor_id = X.actor_id 
AND a2.actor_id = Y.actor_id 
AND X.film_id = Y.film_id 
AND X.actor_id < Y.actor_id 
GROUP BY X.actor_id, Y.actor_id 
HAVING COUNT(*) > 1;
3483

13.
SELECT DISTINCT last_name FROM actor WHERE actor_id NOT IN (SELECT actor_id FROM film_actor JOIN film USING(film_id) WHERE film.title LIKE 'C%');
12

14.
SELECT last_name 
FROM actor 
WHERE (
SELECT COUNT(1) 
FROM film_actor 
JOIN film_category USING (film_id) 
JOIN category USING (category_id) 
WHERE name = 'Horror' 
AND actor.actor_id = film_actor.actor_id) > (
SELECT COUNT(1) 
FROM film_actor 
JOIN film_category USING (film_id) 
JOIN category USING (category_id) 
WHERE name = 'Action' 
AND actor.actor_id = film_actor.actor_id);
61

15.
SELECT DISTINCT first_name, last_name FROM customer JOIN payment USING (customer_id) GROUP BY email HAVING AVG(amount) < (SELECT AVG(amount) FROM payment WHERE DATE(payment_date) = '2005-07-30');
431

16.
UPDATE film SET language_id = (SELECT language_id FROM language WHERE name = 'Italian') WHERE title = 'YOUNG LANGUAGE';

17.
INSERT INTO language(name) VALUES('Spanish');

UPDATE film SET language_id = (SELECT language_id FROM language WHERE name = 'Spanish') WHERE film.film_id IN (SELECT film_id FROM film_actor JOIN actor USING(actor_id) WHERE first_name = 'ED' AND last_name = 'CHASE');

18.
ALTER TABLE language ADD films_no INT;

UPDATE language SET films_no = (SELECT COUNT(1) FROM film WHERE film.language_id = language.language_id);

19. 
ALTER TABLE film DROP COLUMN release_year;
